#!/bin/bash
# log_event_monitor daemon
# chkconfig: 345 20 80
# description: log_event_monitor daemon
# processname: log_event_monitor


DAEMON="/opt/scripts/log_event_monitor/log_event_monitor.py"
DAEMONOPTS=""

NAME=log_event_monitor
DESC="Log Event Monitor Daemon"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

function start_process {
        PID=`$DAEMON $DAEMONOPTS > /dev/null 2>&1 & echo $!`

        echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
}

case "$1" in
start)
	printf "%-50s" "Starting $NAME...\n"

	if [ -f $PIDFILE ]; then

            PID=`cat $PIDFILE`

            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
	        printf "Demon %s already running" $DAEMON
	        exit 1;
            else
                start_process
            fi

	else
            start_process
        fi
;;
status)
        printf "%-50s" "Checking $NAME...\n"
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $NAME"
            PID=`cat $PIDFILE`
        if [ -f $PIDFILE ]; then
            #kill -HUP $PID
            pkill -P $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s" "pidfile not found"
        fi
;;

restart)
  	$0 stop
  	$0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
